package Controlador;

import java.awt.Graphics2D;
import java.awt.Image;
import java.io.IOException;
import javax.imageio.ImageIO;

import Vista.GamePanel;

/**
 * The Enemy class represents an enemy object in the game.
 * It manages the enemy's position, movement, appearance, and health.
 */
public class Enemy {

    private double x;
    private double y;
    private double dx;
    private double dy;
    private int r;
    private int originalSize; // Original size of the enemy (unscaled)
    private double scale; // Specific scale factor for the enemy
    private int speed;
    private boolean setHealth;
    private int health;
    private boolean dead;
    private double angle;
    private int maxAngle;
    private int minAngle;
    private int type;
    private int rank;
    private boolean setXY;
    private Image enemyImage;
    private boolean setFlash;
    private long startFlashTimer;
    private int flashTimer;
    private boolean slow;

    /**
     * Constructs a new Enemy object with the specified type and rank.
     *
     * @param type The type of the enemy.
     * @param rank The rank of the enemy.
     */
    public Enemy(int type, int rank) {
        this.type = type;
        this.rank = rank;
        maxAngle = 130;
        minAngle = 45;
        angle = Math.toRadians(Math.random() * maxAngle + minAngle);
        setHealth = true;
        setXY = true;
        scale = 1; // You can adjust this according to your preference
        speed = 3; // Set a common speed for all enemies
        init();
        initImage(type, rank);
    }

    /**
     * Constructs a new Enemy object with the specified type, rank, health, angle, x-coordinate, and y-coordinate.
     *
     * @param type   The type of the enemy.
     * @param rank   The rank of the enemy.
     * @param health The health of the enemy.
     * @param angle  The angle at which the enemy is oriented.
     * @param x      The x-coordinate of the enemy.
     * @param y      The y-coordinate of the enemy.
     */
    public Enemy(int type, int rank, int health, double angle, double x, double y) {
        this.type = type;
        this.rank = rank;
        this.angle = angle;
        this.health = health;
        if (rank == 1 && type == 1)
            health = 1;
        setHealth = false;
        this.x = x;
        this.y = y;
        setXY = false;
        scale = 1; // You can adjust this according to your preference
        speed = 3; // Set a common speed for all enemies
        init();
        initImage(type, rank);
    }

    private void initImage(int type, int rank) {
        try {
            String imagePath = "/res/enemy_type" + type + "_rank" + rank + ".png";
            enemyImage = ImageIO.read(getClass().getResourceAsStream(imagePath));
            originalSize = enemyImage.getWidth(null); // Get the original size
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void init() {
        dead = false;
        flashTimer = 80;
        if (type == 1) {
