package Controlador;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

import Vista.GamePanel;

public class Bullet {

	// Coordinates
	private int x;
	private int y;
	// Vector Components
	private double dx;
	private double dy;
	// Speed
	private int speed;
	// Radius
	private int r;
	// Angle
	public double angle;

	public Bullet(int angle, int x, int y) {

		// set coordinates
		this.x = x;
		this.y = y;

		// Set Speed
		speed = 10;

		// set radius
		r = 15;

		// Set Angle
		this.angle = Math.toRadians(angle);

		// Set Components
		dx = Math.cos(this.angle) * speed;
		dy = Math.sin(this.angle) * speed;

	}

	public int getx() {
		return x;
	}

	public int gety() {
		return y;
	}

	public int getr() {
		return r;
	}

	public double getAngle() {
		return angle;
	}

	public boolean update() {

		x += dx;
		y += dy;
		// Return Condition of out of Frame
		if (x > GamePanel.WIDTH - r || y > GamePanel.HEIGHT - r || x < -r || y < -r)
			return true;
		// Return Default
		return false;

	}

	public void draw(Graphics2D g) {
		// Cargar la imagen antes de dibujarla
		BufferedImage bulletImage = null;
		try {
			bulletImage = ImageIO.read(new File("src/res/bulletImage.png"));
		} catch (IOException e) {
			e.printStackTrace();
		}

		// Verificar si la imagen se ha cargado correctamente
		if (bulletImage != null) {
			// Dibujar la imagen en lugar de la esfera de color
			g.drawImage(bulletImage, x, y, 2 * r, 2 * r, null);
		} else {
			// Si la imagen no se carga correctamente, dibujar una esfera de color como
			// respaldo

			g.fillOval(x, y, 2 * r, 2 * r);

			g.drawOval(x, y, 2 * r, 2 * r);
		}
	}

}
