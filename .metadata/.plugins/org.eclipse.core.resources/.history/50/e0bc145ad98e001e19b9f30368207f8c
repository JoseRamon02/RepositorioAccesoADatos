	package Controlador;
	
	import java.io.*;
	import java.util.ArrayList;
	import java.util.List;

import Vista.GamePanel;
	
	public class RankingXML {
	    private int vidas;
	    private int score;
	    private String nombre;
	    private List<Jugador> jugadores;
	    GamePanel game;
	    
	    
	    public RankingXML() {
	        vidas = 3;
	        score = 0;
	        jugadores = new ArrayList<>();
	    }
	
	    public void setNombre(String nombre) {
	        this.nombre = nombre;
	    }
	
	    public void actualizarPuntuacion() {
	        // Actualiza la informaci贸n del jugador antes de guardar la puntuaci贸n
	        Jugador jugador = new Jugador(nombre, score);
	        jugadores.add(jugador);
	    }
	
	    public void guardarPuntuacion() {
	        // Llama a actualizarPuntuacion antes de intentar guardar
	        actualizarPuntuacion();

	        // Use an absolute path for the BufferedWriter
	        String filePath = "src/xml/puntuaciones.xml"; // Change this to the correct absolute path
	        try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath))) {
	            writer.write("<puntuaciones>\n");

	            for (Jugador jugador : jugadores) {
	                writer.write(String.format("  <jugador nombre=\"%s\" score=\"%d\" />\n", jugador.getNombre(), score));
	            }

	            writer.write("</puntuaciones>");
	        } catch (IOException e) {
	            e.printStackTrace();
	        }
	    }

	
	
	    public String obtenerRanking() {
	        // L贸gica para obtener la informaci贸n del ranking en formato de cadena (por ejemplo, HTML)
	        StringBuilder rankingInfo = new StringBuilder();
	        rankingInfo.append("<html><body><h1>Ranking</h1>");
	
	        for (Jugador jugador : jugadores) {
	            rankingInfo.append(String.format("<p>%s: %d puntos</p>", jugador.getNombre(), jugador.getScore()));
	        }
	
	        rankingInfo.append("</body></html>");
	        return rankingInfo.toString();
	    }
	
	    // Clase interna para representar a un jugador
	    private static class Jugador {
	        private String nombre;
	        private int score;
	        
	        
	
	        public Jugador(String nombre, int score) {
	            this.nombre = nombre;
	            this.score = score;
	        }
	
	        public String getNombre() {
	            return nombre;
	        }
	
	        public int getScore() {
	            return score;
	        }
	    }
	}
